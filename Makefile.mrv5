# Variables that have to defined here are:
# CUDA:    NVC, NVC_FLAGS, NVC_INCS, NVC_LIBS
# OpenCL:  OCL, OCL_FLAGS, OCL_INCS, OCL_LIBS
# C/C++:   CPP, CPP_FLAGS, CPP_INCS, CPP_LIBS
# Doxygen: DOX (optional)

# Build target: RELEASE or DEBUG 
TARGET    = DEBUG

# CUDA directory 
NVC_DIR   = /opt/cuda-5.0.7/cuda
NVC_ARCH  = -arch=sm_20
NVC_CPP   = -ccbin=g++
NVC_LIBS  = -L$(NVC_DIR)/lib64 -lcudart -lcuda 
NVC_INCS  = -I$(NVC_DIR)/include

# OpenCL directory (optional)
OCL_LIBS  = -L/usr/lib/ -lOpenCL
OCL_INCS  = -I/opt/cuda-5.0.7/cuda/include

# Ordinary C/C++ includes and libraries
CPP_LIBS  = 
CPP_INCS  = 

# Define additional debug flags 
ifeq ($(TARGET), DEBUG)
NVC_FLAGS = -O0 -g -G -Xptxas=-v $(NVC_CPP) $(NVC_ARCH) 
OCL_FLAGS = -O0 -g -Wall -DDEBUG -DUNIX
CPP_FLAGS = -O0 -g -Wall -DDEBUG -DUCL_DEBUG -DUCL_NO_EXIT
endif

# Define additional release flags 
ifeq ($(TARGET), RELEASE)
NVC_FLAGS = -O3 -Xptxas=-v --use_fast_math $(NVC_CPP) $(NVC_ARCH) 
OCL_FLAGS = -O3 -Wall -DNDEBUG -DUNIX
CPP_FLAGS = -O3 -Wall -DNDEBUG -DUCL_DEBUG -DUCL_NO_EXIT
endif

# Define CUDA/OpenCL and C++ compiler 
NVC       = $(NVC_DIR)/bin/nvcc
OCL       = g++
CPP       = g++

# Doxygen executable
DOX       = doxygen
